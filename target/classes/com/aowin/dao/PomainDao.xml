<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aowin.dao.PomainDao">

    <resultMap id="PomainResultMap" type="com.aowin.pojo.Pomain">
        <result property="poId" column="poId"/>
        <result property="name" column="name"/>
        <result property="account" column="account"/>
        <result property="createTime" column="createTime"/>
        <result property="tipFee" column="tipFee"/>
        <result property="productTotal" column="productTotal"/>
        <result property="poTotal" column="poTotal"/>
        <result property="payType" column="payType"/>
        <result property="status" column="status"/>
        <result property="prePayFee" column="prePayFee"/>
        <result property="remark" column="remark"/>
        <collection property="poItems" ofType="com.aowin.pojo.PoItem">
            <result property="poId" column="poId"/>
            <result property="productCode" column="productCode"/>
            <result property="unitPrice" column="unitPrice"/>
            <result property="num" column="num"/>
            <result property="unitName" column="unitName"/>
            <result property="itemPrice" column="itemPrice"/>
        </collection>
    </resultMap>
    <resultMap id="PomainResultMap2" type="com.aowin.pojo.Pomain">
        <result property="poId" column="poId"/>
        <result property="name" column="name"/>
        <result property="account" column="account"/>
        <result property="createTime" column="createTime"/>
        <result property="tipFee" column="tipFee"/>
        <result property="productTotal" column="productTotal"/>
        <result property="poTotal" column="poTotal"/>
        <result property="payType" column="payType"/>
        <result property="status" column="status"/>
        <result property="prePayFee" column="prePayFee"/>
        <result property="remark" column="remark"/>
        <collection property="poItems" ofType="com.aowin.pojo.PoItem">
            <result property="poId" column="poId"/>
            <result property="productCode" column="productCode"/>
            <result property="productName" column="productName"/>
            <result property="unitPrice" column="unitPrice"/>
            <result property="num" column="num"/>
            <result property="unitName" column="unitName"/>
            <result property="itemPrice" column="itemPrice"/>
        </collection>
    </resultMap>
    <resultMap id="InStockResultMap" type="com.aowin.pojo.InStock">
        <result property="poId" column="poId"/>
        <result property="name" column="name"/>
        <result property="productCode" column="productCode"/>
        <result property="num" column="num"/>
        <result property="itemPrice" column="itemPrice"/>
        <result property="stockTime" column="stockTime"/>
    </resultMap>
    <select id="countAll" resultType="int">
        select count(*) from pomain
    </select>
    <select id="countAll2" resultType="int">
        select count(*) from pomain where status=1
    </select>
    <select id="countEnd1" resultType="int">
        select count(*) from pomain where payType='货到付款' and status=3
    </select>
    <select id="countEnd2" resultType="int">
        select count(*) from pomain where payType='款到发货' and status=2
    </select>
    <select id="countEnd3" resultType="int">
        select count(*) from pomain where payType='预付款发货' and status=3
    </select>
    <select id="countIn1" resultType="int">
        select count(*) from pomain where payType='货到付款' and status=1
    </select>
    <select id="countIn2" resultType="int">
        select count(*) from pomain where payType='款到发货' and status=3
    </select>
    <select id="countIn3" resultType="int">
        select count(*) from pomain where payType='预付款发货' and status=5
    </select>
    <select id="countOutMoney1" resultType="int">
        select count(*) from pomain where payType='货到付款' and status=2
    </select>
    <select id="countOutMoney2" resultType="int">
        select count(*) from pomain where payType='款到发货' and status=1
    </select>
    <select id="countOutMoney3" resultType="int">
        select count(*) from pomain where payType='预付款发货' and status in(1,2)
    </select>
    <select id="findAll" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status from pomain p,vender v where p.vendercode=v.vendercode limit #{first},#{max}
    </select>
    <select id="findAll2" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status from pomain p,vender v where p.vendercode=v.vendercode and p.status=1 limit #{first},#{max}
    </select>
    <select id="findEnd1" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status from pomain p,vender v where p.vendercode=v.vendercode and p.payType='货到付款' and p.status=3 limit #{first},#{max}
    </select>
    <select id="findEnd2" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status from pomain p,vender v where p.vendercode=v.vendercode and p.payType='款到发货' and p.status=2 limit #{first},#{max}
    </select>
    <select id="findEnd3" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status from pomain p,vender v where p.vendercode=v.vendercode and p.payType='预付款发货' and p.status=3 limit #{first},#{max}
    </select>
    <select id="findIn1" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status from pomain p,vender v where p.vendercode=v.vendercode and p.payType='货到付款' and p.status=1 limit #{first},#{max}
    </select>
    <select id="findIn2" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status from pomain p,vender v where p.vendercode=v.vendercode and p.payType='款到发货' and p.status=3 limit #{first},#{max}
    </select>
    <select id="findIn3" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status from pomain p,vender v where p.vendercode=v.vendercode and p.payType='预付款发货' and p.status=5 limit #{first},#{max}
    </select>
    <select id="findOutMoney1" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status from pomain p,vender v where p.vendercode=v.vendercode and p.payType='货到付款' and p.status=2 limit #{first},#{max}
    </select>
    <select id="findOutMoney2" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status from pomain p,vender v where p.vendercode=v.vendercode and p.payType='款到发货' and p.status=1 limit #{first},#{max}
    </select>
    <select id="findOutMoney3" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status from pomain p,vender v where p.vendercode=v.vendercode and p.payType='预付款发货' and p.status in(1,2) limit #{first},#{max}
    </select>
    <select id="findSome" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status,p.prePayFee from pomain p,vender v where p.vendercode=v.vendercode
        <if test="poId!=null and poId!=''">
            <bind name="un" value="'%'+poId+'%'"/>
          and p.poId like #{un}
        </if>
        <if test="status!=null and status!=''">
            and p.status=#{status}
        </if>
        <if test="start!=null and start!=''">
            and p.createTime between #{start}
        </if>
        <if test="end!=null and end!=''">
            and #{end}
        </if>
    </select>
    <insert id="insert">
        insert into pomain(poId,vendercode,account,createTime,tipFee,productTotal,poTotal,payType,status,remark,prePayFee) values(#{poId},(select venderCode from vender where name=#{name}),#{account},#{createTime},#{tipFee},#{productTotal},#{poTotal},#{payType},#{status},#{remark},#{prePayFee})
    </insert>
    <select id="getPomain" resultMap="PomainResultMap">
        select p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status,p.prePayFee,p.remark,(select name from vender where vendercode=p.vendercode)name,o.* from pomain p,poitem o where p.poid=o.poid and p.status=1 and p.poId=#{poId}
    </select>
    <select id="getPomain2" resultMap="PomainResultMap2">
        select (select name from product where productCode=o.productCode) productName,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status,p.prePayFee,p.remark,(select name from vender where vendercode=p.vendercode)name,o.* from pomain p,poitem o where p.poid=o.poid and p.status=1 and p.poId=#{poId}
    </select>
    <delete id="delete">
        delete from pomain where poId = #{poId}
    </delete>
    <update id="end">
        update pomain set endUser=#{endUser},endTime=#{endTime},status=4 where poId=#{poId}
    </update>
    <update id="in">
        update pomain set stockUser=#{stockUser},stockTime=#{stockTime},status=2 where poId=#{poId}
    </update>
    <update id="outMoney">
        update pomain set payUser=#{payUser},payTime=#{payTime},status=3 where poId=#{poId}
    </update>
    <update id="outMoney2">
        update pomain set prePayUser=#{payUser},prePayTime=#{payTime},status=5 where poId=#{poId}
    </update>

<!--入库-->
    <insert id="insertSr">
        insert into stockRecord(productCode,orderCode,stockNum,stockType,stockTime,createUser) values(#{productCode},#{orderCode},#{stockNum},1,#{stockTime},#{stockUser})
    </insert>
<!--盘点入库-->
    <insert id="insertSrC">
        insert into stockRecord(productCode,orderCode,stockNum,stockType,stockTime,createUser) values(#{productCode},#{orderCode},#{stockNum},3,#{stockTime},#{stockUser})
    </insert>

    <insert id="insertPayC">
        insert into payRecord(pay_time,pay_price,account,ordercode,pay_type) values(#{payTime},#{price},#{account},#{poId},2)
    </insert>

    <insert id="insertPayC2">
        insert into payRecord(pay_time,pay_price,account,ordercode,pay_type) values(#{payTime},#{price},#{account},#{poId},4)
    </insert>

    <select id="countPomainReportAll" resultType="int">
        select count(*) from pomain
        <if test="date!=null and date!=''">
            <bind name="un" value="'%'+date+'%'"/>
            where createTime like #{un}
        </if>
    </select>
    <select id="countPomainReportEnd" resultType="int">
        select count(*) from pomain where status=4
        <if test="date!=null and date!=''">
            <bind name="un" value="'%'+date+'%'"/>
            and createTime like #{un}
        </if>
    </select>

    <select id="totalPomainReport" resultType="int">
        select ifnull(sum(POTotal),0) from pomain
        <if test="date!=null and date!=''">
            <bind name="un" value="'%'+date+'%'"/>
            where createTime like #{un}
        </if>
    </select>

    <select id="payPomainReport" resultType="int">
        SELECT ifnull(sum(pay_price),0) from payrecord where pay_type in(2,4)
        <if test="date!=null and date!=''">
            <bind name="un" value="'%'+date+'%'"/>
            and pay_time like #{un}
        </if>
    </select>


    <select id="findPomainReport" resultMap="PomainResultMap">
        select p.poId,v.name,p.account,p.createTime,p.tipFee,p.productTotal,p.poTotal,p.payType,p.status,p.prePayFee from pomain p,vender v where p.vendercode=v.vendercode
        <if test="date!=null and date!=''">
            <bind name="un" value="'%'+date+'%'"/>
            and p.createTime like #{un}
        </if>
    </select>
    <select id="findInStockReportAll" resultMap="InStockResultMap">
        select a.*,b.stockTime from(select p.*,t.name from(select poid,productCode,num,itemPrice from poitem)p,product t where p.productCode=t.ProductCode)a,pomain b WHERE a.poid=b.poid and b.StockTime is not null limit #{first},#{max}
    </select>
    <select id="findInStockReportCount" resultType="int">
        select count(*) from(select p.*,t.name from(select poid,productCode,num,itemPrice from poitem)p,product t where p.productCode=t.ProductCode)a,pomain b WHERE a.poid=b.poid and b.StockTime is not null
    </select>
    <select id="findInStockReport" resultMap="InStockResultMap">
        select a.*,b.stockTime from(select p.*,t.name from(select poid,productCode,num,itemPrice from poitem)p,product t where p.productCode=t.ProductCode)a,pomain b WHERE a.poid=b.poid and b.StockTime is not null
        <if test="date!=null and date!=''">
            <bind name="un" value="'%'+date+'%'"/>
            and b.stockTime like #{un}
        </if>
    </select>
    <select id="InStockReportCount" resultType="int">
        select ifNull(count(*),0) from(select p.*,t.name from(select poid,productCode,num,itemPrice from poitem)p,product t where p.productCode=t.ProductCode)a,pomain b WHERE a.poid=b.poid and b.StockTime is not null
        <if test="date!=null and date!=''">
            <bind name="un" value="'%'+date+'%'"/>
            and b.stockTime like #{un}
        </if>
    </select>
    <select id="InStockReportNum" resultType="int">
        select ifNull(sum(num),0) from(select p.*,t.name from(select poid,productCode,num,itemPrice from poitem)p,product t where p.productCode=t.ProductCode)a,pomain b WHERE a.poid=b.poid and b.StockTime is not null
        <if test="date!=null and date!=''">
            <bind name="un" value="'%'+date+'%'"/>
            and b.stockTime like #{un}
        </if>
    </select>
    <select id="InStockReportItemPrice" resultType="int">
        select ifNull(sum(itemPrice),0) from(select p.*,t.name from(select poid,productCode,num,itemPrice from poitem)p,product t where p.productCode=t.ProductCode)a,pomain b WHERE a.poid=b.poid and b.StockTime is not null
        <if test="date!=null and date!=''">
            <bind name="un" value="'%'+date+'%'"/>
            and b.stockTime like #{un}
        </if>
    </select>


</mapper>